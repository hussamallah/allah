import { NextRequest, NextResponse } from 'next/server'
import { createClient } from '@supabase/supabase-js'

export async function POST(request: NextRequest) {
  try {
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY
    
    if (!supabaseUrl || !supabaseServiceKey) {
      return NextResponse.json({ 
        success: false, 
        error: 'Database configuration missing' 
      }, { status: 500 })
    }
    
    const supabase = createClient(supabaseUrl, supabaseServiceKey)
    
    console.log('üßπ Starting cleanup of old anonymous users...')
    
    // Delete anonymous profiles older than 1 hour
    const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString()
    
    const { data, error } = await supabase
      .from('user_profiles')
      .delete()
      .eq('email', null)
      .lt('created_at', oneHourAgo)
      .select('id')
    
    if (error) {
      console.error('‚ùå Error during cleanup:', error)
      return NextResponse.json({ 
        success: false, 
        error: error.message 
      }, { status: 500 })
    }
    
    const deletedCount = data?.length || 0
    console.log(`‚úÖ Cleanup completed: ${deletedCount} anonymous profiles deleted`)
    
    return NextResponse.json({ 
      success: true, 
      deletedCount,
      message: `Successfully deleted ${deletedCount} old anonymous profiles`
    })
    
  } catch (error) {
    console.error('‚ùå Unexpected error during cleanup:', error)
    return NextResponse.json({ 
      success: false, 
      error: 'Internal server error' 
    }, { status: 500 })
  }
} 